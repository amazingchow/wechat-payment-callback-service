// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/amazingchow/wechat-payment-callback-service/protos/wechat_payment_callback_service.proto

package proto_gens // import "github.com/amazingchow/wechat-payment-callback-service/internal/proto_gens"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{0}
}
func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (dst *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(dst, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PongResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PongResponse) Reset()         { *m = PongResponse{} }
func (m *PongResponse) String() string { return proto.CompactTextString(m) }
func (*PongResponse) ProtoMessage()    {}
func (*PongResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{1}
}
func (m *PongResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PongResponse.Unmarshal(m, b)
}
func (m *PongResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PongResponse.Marshal(b, m, deterministic)
}
func (dst *PongResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PongResponse.Merge(dst, src)
}
func (m *PongResponse) XXX_Size() int {
	return xxx_messageInfo_PongResponse.Size(m)
}
func (m *PongResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PongResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PongResponse proto.InternalMessageInfo

type MakeNewPlatformTradeIdRequest struct {
	// 由微信官方给定的应用ID
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// 由微信官方给定的用户唯一标识
	PayerUid             string   `protobuf:"bytes,2,opt,name=payer_uid,json=payerUid,proto3" json:"payer_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeNewPlatformTradeIdRequest) Reset()         { *m = MakeNewPlatformTradeIdRequest{} }
func (m *MakeNewPlatformTradeIdRequest) String() string { return proto.CompactTextString(m) }
func (*MakeNewPlatformTradeIdRequest) ProtoMessage()    {}
func (*MakeNewPlatformTradeIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{2}
}
func (m *MakeNewPlatformTradeIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeNewPlatformTradeIdRequest.Unmarshal(m, b)
}
func (m *MakeNewPlatformTradeIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeNewPlatformTradeIdRequest.Marshal(b, m, deterministic)
}
func (dst *MakeNewPlatformTradeIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeNewPlatformTradeIdRequest.Merge(dst, src)
}
func (m *MakeNewPlatformTradeIdRequest) XXX_Size() int {
	return xxx_messageInfo_MakeNewPlatformTradeIdRequest.Size(m)
}
func (m *MakeNewPlatformTradeIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeNewPlatformTradeIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakeNewPlatformTradeIdRequest proto.InternalMessageInfo

func (m *MakeNewPlatformTradeIdRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *MakeNewPlatformTradeIdRequest) GetPayerUid() string {
	if m != nil {
		return m.PayerUid
	}
	return ""
}

type MakeNewPlatformTradeIdResponse struct {
	// 由系统生成的平台订单交易ID
	TradeId              string   `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeNewPlatformTradeIdResponse) Reset()         { *m = MakeNewPlatformTradeIdResponse{} }
func (m *MakeNewPlatformTradeIdResponse) String() string { return proto.CompactTextString(m) }
func (*MakeNewPlatformTradeIdResponse) ProtoMessage()    {}
func (*MakeNewPlatformTradeIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{3}
}
func (m *MakeNewPlatformTradeIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeNewPlatformTradeIdResponse.Unmarshal(m, b)
}
func (m *MakeNewPlatformTradeIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeNewPlatformTradeIdResponse.Marshal(b, m, deterministic)
}
func (dst *MakeNewPlatformTradeIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeNewPlatformTradeIdResponse.Merge(dst, src)
}
func (m *MakeNewPlatformTradeIdResponse) XXX_Size() int {
	return xxx_messageInfo_MakeNewPlatformTradeIdResponse.Size(m)
}
func (m *MakeNewPlatformTradeIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeNewPlatformTradeIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakeNewPlatformTradeIdResponse proto.InternalMessageInfo

func (m *MakeNewPlatformTradeIdResponse) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

type MakeNewWxPrepayOrderRequest struct {
	// 由微信官方给定的应用ID
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// 由微信官方给定的用户唯一标识
	PayerUid string `protobuf:"bytes,2,opt,name=payer_uid,json=payerUid,proto3" json:"payer_uid,omitempty"`
	// 由系统生成的平台订单交易ID
	TradeId string `protobuf:"bytes,3,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	// 商品描述
	ItemDescription string `protobuf:"bytes,4,opt,name=item_description,json=itemDescription,proto3" json:"item_description,omitempty"`
	// 订单总额, 单位（分）
	ItemAmountTotal      int64    `protobuf:"varint,5,opt,name=item_amount_total,json=itemAmountTotal,proto3" json:"item_amount_total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeNewWxPrepayOrderRequest) Reset()         { *m = MakeNewWxPrepayOrderRequest{} }
func (m *MakeNewWxPrepayOrderRequest) String() string { return proto.CompactTextString(m) }
func (*MakeNewWxPrepayOrderRequest) ProtoMessage()    {}
func (*MakeNewWxPrepayOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{4}
}
func (m *MakeNewWxPrepayOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeNewWxPrepayOrderRequest.Unmarshal(m, b)
}
func (m *MakeNewWxPrepayOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeNewWxPrepayOrderRequest.Marshal(b, m, deterministic)
}
func (dst *MakeNewWxPrepayOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeNewWxPrepayOrderRequest.Merge(dst, src)
}
func (m *MakeNewWxPrepayOrderRequest) XXX_Size() int {
	return xxx_messageInfo_MakeNewWxPrepayOrderRequest.Size(m)
}
func (m *MakeNewWxPrepayOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeNewWxPrepayOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakeNewWxPrepayOrderRequest proto.InternalMessageInfo

func (m *MakeNewWxPrepayOrderRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *MakeNewWxPrepayOrderRequest) GetPayerUid() string {
	if m != nil {
		return m.PayerUid
	}
	return ""
}

func (m *MakeNewWxPrepayOrderRequest) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

func (m *MakeNewWxPrepayOrderRequest) GetItemDescription() string {
	if m != nil {
		return m.ItemDescription
	}
	return ""
}

func (m *MakeNewWxPrepayOrderRequest) GetItemAmountTotal() int64 {
	if m != nil {
		return m.ItemAmountTotal
	}
	return 0
}

type WxRequestPaymentParams struct {
	// 当前的时间, 示例值: 1414561699
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// 随机字符串, 不长于32位, 示例值: 5K8264ILTKCH16CQ2502SI8ZNMTM67VS
	Nonce string `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// 小程序下单接口返回的prepay_id参数值
	Package string `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`
	// 签名类型, 默认为RSA, 仅支持RSA
	SignType string `protobuf:"bytes,4,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`
	// 签名, 使用字段appId、timeStamp、nonceStr、package计算得出的签名值
	PaySign              string   `protobuf:"bytes,5,opt,name=pay_sign,json=paySign,proto3" json:"pay_sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WxRequestPaymentParams) Reset()         { *m = WxRequestPaymentParams{} }
func (m *WxRequestPaymentParams) String() string { return proto.CompactTextString(m) }
func (*WxRequestPaymentParams) ProtoMessage()    {}
func (*WxRequestPaymentParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{5}
}
func (m *WxRequestPaymentParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WxRequestPaymentParams.Unmarshal(m, b)
}
func (m *WxRequestPaymentParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WxRequestPaymentParams.Marshal(b, m, deterministic)
}
func (dst *WxRequestPaymentParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WxRequestPaymentParams.Merge(dst, src)
}
func (m *WxRequestPaymentParams) XXX_Size() int {
	return xxx_messageInfo_WxRequestPaymentParams.Size(m)
}
func (m *WxRequestPaymentParams) XXX_DiscardUnknown() {
	xxx_messageInfo_WxRequestPaymentParams.DiscardUnknown(m)
}

var xxx_messageInfo_WxRequestPaymentParams proto.InternalMessageInfo

func (m *WxRequestPaymentParams) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *WxRequestPaymentParams) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *WxRequestPaymentParams) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *WxRequestPaymentParams) GetSignType() string {
	if m != nil {
		return m.SignType
	}
	return ""
}

func (m *WxRequestPaymentParams) GetPaySign() string {
	if m != nil {
		return m.PaySign
	}
	return ""
}

type MakeNewWxPrepayOrderResponse struct {
	Params               *WxRequestPaymentParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MakeNewWxPrepayOrderResponse) Reset()         { *m = MakeNewWxPrepayOrderResponse{} }
func (m *MakeNewWxPrepayOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MakeNewWxPrepayOrderResponse) ProtoMessage()    {}
func (*MakeNewWxPrepayOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{6}
}
func (m *MakeNewWxPrepayOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeNewWxPrepayOrderResponse.Unmarshal(m, b)
}
func (m *MakeNewWxPrepayOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeNewWxPrepayOrderResponse.Marshal(b, m, deterministic)
}
func (dst *MakeNewWxPrepayOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeNewWxPrepayOrderResponse.Merge(dst, src)
}
func (m *MakeNewWxPrepayOrderResponse) XXX_Size() int {
	return xxx_messageInfo_MakeNewWxPrepayOrderResponse.Size(m)
}
func (m *MakeNewWxPrepayOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeNewWxPrepayOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakeNewWxPrepayOrderResponse proto.InternalMessageInfo

func (m *MakeNewWxPrepayOrderResponse) GetParams() *WxRequestPaymentParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type QueryWxPaymentStatusRequest struct {
	// 由系统生成的平台订单交易ID
	TradeId              string   `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryWxPaymentStatusRequest) Reset()         { *m = QueryWxPaymentStatusRequest{} }
func (m *QueryWxPaymentStatusRequest) String() string { return proto.CompactTextString(m) }
func (*QueryWxPaymentStatusRequest) ProtoMessage()    {}
func (*QueryWxPaymentStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{7}
}
func (m *QueryWxPaymentStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryWxPaymentStatusRequest.Unmarshal(m, b)
}
func (m *QueryWxPaymentStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryWxPaymentStatusRequest.Marshal(b, m, deterministic)
}
func (dst *QueryWxPaymentStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWxPaymentStatusRequest.Merge(dst, src)
}
func (m *QueryWxPaymentStatusRequest) XXX_Size() int {
	return xxx_messageInfo_QueryWxPaymentStatusRequest.Size(m)
}
func (m *QueryWxPaymentStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWxPaymentStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryWxPaymentStatusRequest proto.InternalMessageInfo

func (m *QueryWxPaymentStatusRequest) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

type QueryWxPaymentStatusResponse struct {
	// 由微信官方给定的应用ID
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// 由系统生成的平台订单交易ID
	TradeId string `protobuf:"bytes,2,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	// 由微信官方给定的支付订单号
	TrxId string `protobuf:"bytes,3,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	// 交易类型
	TradeType string `protobuf:"bytes,4,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	// 交易状态
	TradeState string `protobuf:"bytes,5,opt,name=trade_state,json=tradeState,proto3" json:"trade_state,omitempty"`
	// 支付完成时间
	SuccessTime          string   `protobuf:"bytes,6,opt,name=success_time,json=successTime,proto3" json:"success_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryWxPaymentStatusResponse) Reset()         { *m = QueryWxPaymentStatusResponse{} }
func (m *QueryWxPaymentStatusResponse) String() string { return proto.CompactTextString(m) }
func (*QueryWxPaymentStatusResponse) ProtoMessage()    {}
func (*QueryWxPaymentStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{8}
}
func (m *QueryWxPaymentStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryWxPaymentStatusResponse.Unmarshal(m, b)
}
func (m *QueryWxPaymentStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryWxPaymentStatusResponse.Marshal(b, m, deterministic)
}
func (dst *QueryWxPaymentStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWxPaymentStatusResponse.Merge(dst, src)
}
func (m *QueryWxPaymentStatusResponse) XXX_Size() int {
	return xxx_messageInfo_QueryWxPaymentStatusResponse.Size(m)
}
func (m *QueryWxPaymentStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWxPaymentStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryWxPaymentStatusResponse proto.InternalMessageInfo

func (m *QueryWxPaymentStatusResponse) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *QueryWxPaymentStatusResponse) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

func (m *QueryWxPaymentStatusResponse) GetTrxId() string {
	if m != nil {
		return m.TrxId
	}
	return ""
}

func (m *QueryWxPaymentStatusResponse) GetTradeType() string {
	if m != nil {
		return m.TradeType
	}
	return ""
}

func (m *QueryWxPaymentStatusResponse) GetTradeState() string {
	if m != nil {
		return m.TradeState
	}
	return ""
}

func (m *QueryWxPaymentStatusResponse) GetSuccessTime() string {
	if m != nil {
		return m.SuccessTime
	}
	return ""
}

type CloseWxPrepayOrderRequest struct {
	// 由系统生成的平台订单交易ID
	TradeId              string   `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseWxPrepayOrderRequest) Reset()         { *m = CloseWxPrepayOrderRequest{} }
func (m *CloseWxPrepayOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CloseWxPrepayOrderRequest) ProtoMessage()    {}
func (*CloseWxPrepayOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{9}
}
func (m *CloseWxPrepayOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseWxPrepayOrderRequest.Unmarshal(m, b)
}
func (m *CloseWxPrepayOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseWxPrepayOrderRequest.Marshal(b, m, deterministic)
}
func (dst *CloseWxPrepayOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseWxPrepayOrderRequest.Merge(dst, src)
}
func (m *CloseWxPrepayOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CloseWxPrepayOrderRequest.Size(m)
}
func (m *CloseWxPrepayOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseWxPrepayOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseWxPrepayOrderRequest proto.InternalMessageInfo

func (m *CloseWxPrepayOrderRequest) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

type CloseWxPrepayOrderResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseWxPrepayOrderResponse) Reset()         { *m = CloseWxPrepayOrderResponse{} }
func (m *CloseWxPrepayOrderResponse) String() string { return proto.CompactTextString(m) }
func (*CloseWxPrepayOrderResponse) ProtoMessage()    {}
func (*CloseWxPrepayOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12, []int{10}
}
func (m *CloseWxPrepayOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseWxPrepayOrderResponse.Unmarshal(m, b)
}
func (m *CloseWxPrepayOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseWxPrepayOrderResponse.Marshal(b, m, deterministic)
}
func (dst *CloseWxPrepayOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseWxPrepayOrderResponse.Merge(dst, src)
}
func (m *CloseWxPrepayOrderResponse) XXX_Size() int {
	return xxx_messageInfo_CloseWxPrepayOrderResponse.Size(m)
}
func (m *CloseWxPrepayOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseWxPrepayOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseWxPrepayOrderResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PingRequest)(nil), "wechat_payment_callback_service.PingRequest")
	proto.RegisterType((*PongResponse)(nil), "wechat_payment_callback_service.PongResponse")
	proto.RegisterType((*MakeNewPlatformTradeIdRequest)(nil), "wechat_payment_callback_service.MakeNewPlatformTradeIdRequest")
	proto.RegisterType((*MakeNewPlatformTradeIdResponse)(nil), "wechat_payment_callback_service.MakeNewPlatformTradeIdResponse")
	proto.RegisterType((*MakeNewWxPrepayOrderRequest)(nil), "wechat_payment_callback_service.MakeNewWxPrepayOrderRequest")
	proto.RegisterType((*WxRequestPaymentParams)(nil), "wechat_payment_callback_service.WxRequestPaymentParams")
	proto.RegisterType((*MakeNewWxPrepayOrderResponse)(nil), "wechat_payment_callback_service.MakeNewWxPrepayOrderResponse")
	proto.RegisterType((*QueryWxPaymentStatusRequest)(nil), "wechat_payment_callback_service.QueryWxPaymentStatusRequest")
	proto.RegisterType((*QueryWxPaymentStatusResponse)(nil), "wechat_payment_callback_service.QueryWxPaymentStatusResponse")
	proto.RegisterType((*CloseWxPrepayOrderRequest)(nil), "wechat_payment_callback_service.CloseWxPrepayOrderRequest")
	proto.RegisterType((*CloseWxPrepayOrderResponse)(nil), "wechat_payment_callback_service.CloseWxPrepayOrderResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WechatPaymentCallbackServiceClient is the client API for WechatPaymentCallbackService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WechatPaymentCallbackServiceClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error)
	// 生成平台订单交易ID
	MakeNewPlatformTradeId(ctx context.Context, in *MakeNewPlatformTradeIdRequest, opts ...grpc.CallOption) (*MakeNewPlatformTradeIdResponse, error)
	// 创建平台订单和微信预支付订单
	MakeNewWxPrepayOrder(ctx context.Context, in *MakeNewWxPrepayOrderRequest, opts ...grpc.CallOption) (*MakeNewWxPrepayOrderResponse, error)
	// 查询微信支付状态
	QueryWxPaymentStatus(ctx context.Context, in *QueryWxPaymentStatusRequest, opts ...grpc.CallOption) (*QueryWxPaymentStatusResponse, error)
	// 关闭微信预支付订单
	CloseWxPrepayOrder(ctx context.Context, in *CloseWxPrepayOrderRequest, opts ...grpc.CallOption) (*CloseWxPrepayOrderResponse, error)
}

type wechatPaymentCallbackServiceClient struct {
	cc *grpc.ClientConn
}

func NewWechatPaymentCallbackServiceClient(cc *grpc.ClientConn) WechatPaymentCallbackServiceClient {
	return &wechatPaymentCallbackServiceClient{cc}
}

func (c *wechatPaymentCallbackServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error) {
	out := new(PongResponse)
	err := c.cc.Invoke(ctx, "/wechat_payment_callback_service.WechatPaymentCallbackService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wechatPaymentCallbackServiceClient) MakeNewPlatformTradeId(ctx context.Context, in *MakeNewPlatformTradeIdRequest, opts ...grpc.CallOption) (*MakeNewPlatformTradeIdResponse, error) {
	out := new(MakeNewPlatformTradeIdResponse)
	err := c.cc.Invoke(ctx, "/wechat_payment_callback_service.WechatPaymentCallbackService/MakeNewPlatformTradeId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wechatPaymentCallbackServiceClient) MakeNewWxPrepayOrder(ctx context.Context, in *MakeNewWxPrepayOrderRequest, opts ...grpc.CallOption) (*MakeNewWxPrepayOrderResponse, error) {
	out := new(MakeNewWxPrepayOrderResponse)
	err := c.cc.Invoke(ctx, "/wechat_payment_callback_service.WechatPaymentCallbackService/MakeNewWxPrepayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wechatPaymentCallbackServiceClient) QueryWxPaymentStatus(ctx context.Context, in *QueryWxPaymentStatusRequest, opts ...grpc.CallOption) (*QueryWxPaymentStatusResponse, error) {
	out := new(QueryWxPaymentStatusResponse)
	err := c.cc.Invoke(ctx, "/wechat_payment_callback_service.WechatPaymentCallbackService/QueryWxPaymentStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wechatPaymentCallbackServiceClient) CloseWxPrepayOrder(ctx context.Context, in *CloseWxPrepayOrderRequest, opts ...grpc.CallOption) (*CloseWxPrepayOrderResponse, error) {
	out := new(CloseWxPrepayOrderResponse)
	err := c.cc.Invoke(ctx, "/wechat_payment_callback_service.WechatPaymentCallbackService/CloseWxPrepayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WechatPaymentCallbackServiceServer is the server API for WechatPaymentCallbackService service.
type WechatPaymentCallbackServiceServer interface {
	Ping(context.Context, *PingRequest) (*PongResponse, error)
	// 生成平台订单交易ID
	MakeNewPlatformTradeId(context.Context, *MakeNewPlatformTradeIdRequest) (*MakeNewPlatformTradeIdResponse, error)
	// 创建平台订单和微信预支付订单
	MakeNewWxPrepayOrder(context.Context, *MakeNewWxPrepayOrderRequest) (*MakeNewWxPrepayOrderResponse, error)
	// 查询微信支付状态
	QueryWxPaymentStatus(context.Context, *QueryWxPaymentStatusRequest) (*QueryWxPaymentStatusResponse, error)
	// 关闭微信预支付订单
	CloseWxPrepayOrder(context.Context, *CloseWxPrepayOrderRequest) (*CloseWxPrepayOrderResponse, error)
}

func RegisterWechatPaymentCallbackServiceServer(s *grpc.Server, srv WechatPaymentCallbackServiceServer) {
	s.RegisterService(&_WechatPaymentCallbackService_serviceDesc, srv)
}

func _WechatPaymentCallbackService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatPaymentCallbackServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wechat_payment_callback_service.WechatPaymentCallbackService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatPaymentCallbackServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WechatPaymentCallbackService_MakeNewPlatformTradeId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeNewPlatformTradeIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatPaymentCallbackServiceServer).MakeNewPlatformTradeId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wechat_payment_callback_service.WechatPaymentCallbackService/MakeNewPlatformTradeId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatPaymentCallbackServiceServer).MakeNewPlatformTradeId(ctx, req.(*MakeNewPlatformTradeIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WechatPaymentCallbackService_MakeNewWxPrepayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeNewWxPrepayOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatPaymentCallbackServiceServer).MakeNewWxPrepayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wechat_payment_callback_service.WechatPaymentCallbackService/MakeNewWxPrepayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatPaymentCallbackServiceServer).MakeNewWxPrepayOrder(ctx, req.(*MakeNewWxPrepayOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WechatPaymentCallbackService_QueryWxPaymentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryWxPaymentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatPaymentCallbackServiceServer).QueryWxPaymentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wechat_payment_callback_service.WechatPaymentCallbackService/QueryWxPaymentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatPaymentCallbackServiceServer).QueryWxPaymentStatus(ctx, req.(*QueryWxPaymentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WechatPaymentCallbackService_CloseWxPrepayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseWxPrepayOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatPaymentCallbackServiceServer).CloseWxPrepayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wechat_payment_callback_service.WechatPaymentCallbackService/CloseWxPrepayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatPaymentCallbackServiceServer).CloseWxPrepayOrder(ctx, req.(*CloseWxPrepayOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WechatPaymentCallbackService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wechat_payment_callback_service.WechatPaymentCallbackService",
	HandlerType: (*WechatPaymentCallbackServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _WechatPaymentCallbackService_Ping_Handler,
		},
		{
			MethodName: "MakeNewPlatformTradeId",
			Handler:    _WechatPaymentCallbackService_MakeNewPlatformTradeId_Handler,
		},
		{
			MethodName: "MakeNewWxPrepayOrder",
			Handler:    _WechatPaymentCallbackService_MakeNewWxPrepayOrder_Handler,
		},
		{
			MethodName: "QueryWxPaymentStatus",
			Handler:    _WechatPaymentCallbackService_QueryWxPaymentStatus_Handler,
		},
		{
			MethodName: "CloseWxPrepayOrder",
			Handler:    _WechatPaymentCallbackService_CloseWxPrepayOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/amazingchow/wechat-payment-callback-service/protos/wechat_payment_callback_service.proto",
}

func init() {
	proto.RegisterFile("github.com/amazingchow/wechat-payment-callback-service/protos/wechat_payment_callback_service.proto", fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12)
}

var fileDescriptor_wechat_payment_callback_service_524a1a52b0d32c12 = []byte{
	// 673 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x5d, 0xb6, 0xb5, 0x5b, 0x6f, 0xc7, 0x97, 0xb5, 0x4d, 0x5d, 0xd7, 0xb1, 0x91, 0xa7, 0x81,
	0xe8, 0x26, 0x0d, 0x09, 0x10, 0xe3, 0x43, 0x30, 0x5e, 0x86, 0x80, 0x95, 0xb6, 0xa8, 0x12, 0x2f,
	0x91, 0x97, 0x5c, 0x32, 0x6b, 0x4d, 0x62, 0x6c, 0x87, 0x35, 0xfc, 0x09, 0x9e, 0x78, 0x42, 0xe2,
	0xcf, 0xf0, 0xc6, 0xff, 0xe0, 0x7f, 0xa0, 0x38, 0x2e, 0x6d, 0x45, 0xd6, 0x56, 0xe5, 0xad, 0x3e,
	0x39, 0xe7, 0xfa, 0xf8, 0x9e, 0x6b, 0x17, 0x5c, 0x9f, 0xa9, 0xb3, 0xf8, 0x74, 0xcf, 0x8d, 0x82,
	0x7d, 0x1a, 0xd0, 0x2f, 0x2c, 0xf4, 0xdd, 0xb3, 0xe8, 0x62, 0xff, 0x02, 0xdd, 0x33, 0xaa, 0xea,
	0x9c, 0x26, 0x01, 0x86, 0xaa, 0xee, 0xd2, 0x6e, 0xf7, 0x94, 0xba, 0xe7, 0x75, 0x89, 0xe2, 0x33,
	0x73, 0x71, 0x9f, 0x8b, 0x48, 0x45, 0xd2, 0xd0, 0x1c, 0x43, 0x73, 0xfa, 0x34, 0xc7, 0xd0, 0xf6,
	0x34, 0x8d, 0x6c, 0x4f, 0xa0, 0xd9, 0x57, 0xa0, 0xdc, 0x60, 0xa1, 0xdf, 0xc4, 0x4f, 0x31, 0x4a,
	0x65, 0x5f, 0x85, 0x95, 0x46, 0x94, 0x2e, 0x25, 0x8f, 0x42, 0x89, 0x76, 0x0b, 0xb6, 0xde, 0xd0,
	0x73, 0x7c, 0x8b, 0x17, 0x8d, 0x2e, 0x55, 0x1f, 0x23, 0x11, 0xb4, 0x05, 0xf5, 0xf0, 0xd8, 0x33,
	0x02, 0xb2, 0x06, 0x45, 0xca, 0xb9, 0xc3, 0xbc, 0x8a, 0xb5, 0x63, 0xed, 0x96, 0x9a, 0x05, 0xca,
	0xf9, 0xb1, 0x47, 0x36, 0xa1, 0xc4, 0x69, 0x82, 0xc2, 0x89, 0x99, 0x57, 0x99, 0xd7, 0x5f, 0x96,
	0x35, 0xf0, 0x9e, 0x79, 0xf6, 0x21, 0xdc, 0xbc, 0xac, 0x68, 0xb6, 0x2d, 0xd9, 0x80, 0x65, 0x95,
	0x42, 0x83, 0xba, 0x4b, 0x2a, 0xa3, 0xd8, 0x3f, 0x2d, 0xd8, 0x34, 0xea, 0x4e, 0xaf, 0x21, 0x90,
	0xd3, 0xe4, 0x44, 0x78, 0x28, 0xfe, 0xc3, 0xd0, 0xc8, 0x76, 0x0b, 0x23, 0xdb, 0x91, 0xdb, 0x70,
	0x9d, 0x29, 0x0c, 0x1c, 0x0f, 0xa5, 0x2b, 0x18, 0x57, 0x2c, 0x0a, 0x2b, 0x8b, 0x9a, 0x72, 0x2d,
	0xc5, 0x5f, 0x0e, 0x60, 0x72, 0x07, 0x6e, 0x68, 0x2a, 0x0d, 0xa2, 0x38, 0x54, 0x8e, 0x8a, 0x14,
	0xed, 0x56, 0x0a, 0x3b, 0xd6, 0xee, 0x42, 0xc6, 0x7d, 0xae, 0xf1, 0x76, 0x0a, 0xdb, 0x3f, 0x2c,
	0x58, 0xef, 0xf4, 0x8c, 0xe7, 0x46, 0x16, 0x4e, 0x83, 0x0a, 0x1a, 0x48, 0x52, 0x83, 0x92, 0x62,
	0x01, 0x4a, 0x45, 0x03, 0xae, 0xcf, 0xb0, 0xd0, 0x1c, 0x00, 0x64, 0x15, 0x0a, 0x61, 0x14, 0xba,
	0x68, 0xce, 0x90, 0x2d, 0x48, 0x05, 0x96, 0x38, 0x75, 0xcf, 0xa9, 0x8f, 0x7d, 0xff, 0x66, 0x99,
	0x9e, 0x5b, 0x32, 0x3f, 0x74, 0x54, 0xc2, 0xd1, 0x18, 0x5f, 0x4e, 0x81, 0x76, 0xc2, 0x75, 0x9b,
	0x39, 0x4d, 0x9c, 0x74, 0xad, 0x8d, 0x6a, 0x5d, 0xd2, 0x62, 0x7e, 0x68, 0x47, 0x50, 0xcb, 0xef,
	0xb2, 0x49, 0xe8, 0x04, 0x8a, 0x5c, 0xfb, 0xd5, 0x16, 0xcb, 0x07, 0x0f, 0xf6, 0x26, 0x0d, 0x64,
	0xfe, 0x71, 0x9b, 0xa6, 0x8c, 0xfd, 0x10, 0x36, 0xdf, 0xc5, 0x28, 0x92, 0x4e, 0xcf, 0x7c, 0x6f,
	0x29, 0xaa, 0x62, 0xd9, 0x8f, 0x75, 0xcc, 0x44, 0xfc, 0xb2, 0xa0, 0x96, 0x2f, 0x35, 0x5e, 0x2f,
	0x19, 0x89, 0xe1, 0x92, 0xf3, 0xa3, 0xa9, 0xaf, 0x41, 0x51, 0x89, 0xde, 0x60, 0x1c, 0x0a, 0x4a,
	0xf4, 0x8e, 0x3d, 0xb2, 0x05, 0x90, 0x29, 0x86, 0xba, 0x59, 0xd2, 0x88, 0x6e, 0xe7, 0x36, 0x94,
	0xb3, 0xcf, 0x52, 0x51, 0x85, 0xa6, 0xa3, 0x99, 0x22, 0x75, 0x84, 0xe4, 0x16, 0xac, 0xc8, 0xd8,
	0x75, 0x51, 0x4a, 0x27, 0x4d, 0xb4, 0x52, 0xd4, 0x8c, 0xb2, 0xc1, 0xda, 0x2c, 0x40, 0xfb, 0x3e,
	0x6c, 0x1c, 0x75, 0x23, 0x89, 0xb9, 0xb3, 0x3d, 0xa6, 0x09, 0x35, 0xa8, 0xe6, 0xe9, 0xb2, 0x0e,
	0x1c, 0xfc, 0x2e, 0x40, 0xad, 0xa3, 0xf3, 0x31, 0x1d, 0x3a, 0x32, 0xe9, 0xb4, 0xb2, 0x70, 0x08,
	0xc2, 0x62, 0xfa, 0x0c, 0x90, 0xbb, 0x13, 0x63, 0x1c, 0x7a, 0x2d, 0xaa, 0xf5, 0xc9, 0xec, 0xe1,
	0xc7, 0x64, 0x8e, 0x7c, 0xb7, 0x60, 0x3d, 0xff, 0xea, 0x93, 0xa7, 0x13, 0x6b, 0x8d, 0x7d, 0x88,
	0xaa, 0xcf, 0x66, 0xd6, 0xff, 0x75, 0xf7, 0xcd, 0x82, 0xd5, 0xbc, 0xa1, 0x27, 0x8f, 0xa7, 0xad,
	0x9d, 0x97, 0x5a, 0xf5, 0xc9, 0x8c, 0xea, 0x11, 0x5f, 0x79, 0x03, 0x3e, 0x85, 0xaf, 0x31, 0x57,
	0x6a, 0x0a, 0x5f, 0xe3, 0x6e, 0x95, 0x3d, 0x47, 0xbe, 0x5a, 0x40, 0xfe, 0x1d, 0x3a, 0xf2, 0x68,
	0x62, 0xdd, 0x4b, 0x27, 0xbc, 0x7a, 0x38, 0x93, 0xb6, 0xef, 0xe8, 0xc5, 0xeb, 0x0f, 0xaf, 0x66,
	0xfc, 0x57, 0x65, 0xa1, 0x42, 0x11, 0xd2, 0x6e, 0xf6, 0xf7, 0xea, 0xf8, 0x18, 0xca, 0xd3, 0xa2,
	0xfe, 0x7d, 0xef, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0x85, 0x39, 0x9c, 0xaa, 0x07, 0x00,
	0x00,
}
